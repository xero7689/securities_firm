version: "3"

x-service-config: &service-config
  environment:
    IS_DEPLOYED: ${IS_DEPLOYED:-true}
    IS_DEBUG: ${IN_DEBUG:-true}
    DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-default-unsafe-secret-key}
    ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
    POSTGRES_DB: ${POSTGRES_DB:-securities_firm}
    POSTGRES_USER: ${POSTGRES_USER:-postgres}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    POSTGRES_HOST: ${POSTGRES_HOST:-db}
    POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    APP_NAME: ${APP_NAME:-securities_firm}

services:
  app:
    <<: *service-config
    container_name: "${COMPOSE_PROJECT_NAME}-app"
    image: securities_firm:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/.venv
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: "${COMPOSE_PROJECT_NAME}-db"
    image: postgres:14
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-securities_firm}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-securities_firm}",
        ]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
